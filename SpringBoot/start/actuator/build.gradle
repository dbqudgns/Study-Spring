plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    // 빌드 시점에 사용한 git 정보도 노출할 수 있다. git 정보를 노출하려면 git.properties 파일이 필요하다.=> info 엔드포인터에 정보 노출을 위해 필요
    id "com.gorylenko.gradle-git-properties" version '2.4.1'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator' //actuator 추가

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 마이크로미터 프로메테우스 구현 라이브러리 추가
    // 스프링 부트와 액츄에이터가 자동으로 마이크로미터 프로메테우스 구현체를 등록해서 동작하도록 설정해준다.
    // 액츄에이터에 프로메테우스 메트릭 수집 엔드포인트가 자동으로 추가된다 : /actuator/prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'

    //test lombok 사용
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Info 엔드포인트에 빌드 정보를 노출하려면 빌드 시점에 META-INF/build-info.properties 파일을 만들어야 하므로 gradle에 아래 내용을 추가한다.
springBoot {
    buildInfo()
}
